<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 13 May 2018 00:00:00 +0000</lastBuildDate><item><title>Effortless Logging: A deep dive into the logging module</title><link>http://pyvideo.org/pycon-us-2018/effortless-logging-a-deep-dive-into-the-logging-module.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Logs are our best friend, especially on those late nights when we try to troubleshoot a problem in production that was written by a co-worker who is on vacation. Logs are the main way to know what is happening with an application at runtime, but we don’t realize how important they are until we actually need them. Unfortunately, they are usually an under-estimated part of the development process.&lt;/p&gt;
&lt;p&gt;This talk aims to transmit the need for the logging module, briefly explains how to use it and how it is built, and dives into all the complexity that is hidden to us. This will help attendees not just understand all the magic that allows us to inspect our applications at runtime, but also to avoid mistakes and adapt the module to our needs for more esoteric scenarios.&lt;/p&gt;
&lt;p&gt;The talk is structured to simplify the understanding of the logging module. Many people have read the documentation, but still struggle to fully understand what is happening under the hood. This talk aims to eliminate that barrier by presenting it in an easier-to-digest manner.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mario Corchero</dc:creator><pubDate>Sun, 13 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-13:pycon-us-2018/effortless-logging-a-deep-dive-into-the-logging-module.html</guid><category>logging</category></item><item><title>The log lines that saved vacation</title><link>http://pyvideo.org/pycon-uk-2017/the-log-lines-that-saved-vacation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Logs are your best friend, especially on one of those late nights when you try to troubleshoot a problem in production that was written by a co-worker who is on holiday. Logs are the main way to know what is happening with an application at runtime, but we don’t realise how important they are until we actually need them. Unfortunately, they are usually an under-estimated part of the development process.&lt;/p&gt;
&lt;p&gt;This talk will provide an overview of the logging module of the standard Python library and demonstrates some basic best practices and techniques to make the most out of our logging when we need it.&lt;/p&gt;
&lt;p&gt;After the talk, you'll be fully familiar with how to use the logging library, how it is actually designed, how it works, and how to go beyond its basic usage, as well as some sample recipes and configurations for complex applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mario Corchero</dc:creator><pubDate>Sun, 29 Oct 2017 14:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/the-log-lines-that-saved-vacation.html</guid></item><item><title>Apertura Domingo - PyConES 2017</title><link>http://pyvideo.org/pycon-es-2017/apertura-domingo-pycones-2017.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mario Corchero</dc:creator><pubDate>Sun, 24 Sep 2017 09:15:00 +0200</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-es-2017/apertura-domingo-pycones-2017.html</guid></item><item><title>Apertura Sabado - PyConES 2017</title><link>http://pyvideo.org/pycon-es-2017/apertura-sabado-pycones-2017.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mario Corchero</dc:creator><pubDate>Sat, 23 Sep 2017 09:00:00 +0200</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-es-2017/apertura-sabado-pycones-2017.html</guid><category>opening</category></item><item><title>Effortless Logging - Let the loggers work for you</title><link>http://pyvideo.org/europython-2017/effortless-logging-let-the-loggers-work-for-you.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Logs are your best friends on those late nights when you try to
troubleshoot that problem in production that was written by a friend
of you who is on holidays at the moment. Logs are the main way to
know what is happening at runtime with an running application but as
we don’t realize how important they are until we actually need them
it is usually an under appreciated part of our development process.&lt;/p&gt;
&lt;p&gt;This talks overviews the logging module of the standard library and
demonstrates some basic best practices and techniques make the most
out of our logging when we need it.&lt;/p&gt;
&lt;p&gt;After this talk you will be fully familiar not only on how to use the
logging library but also how it is actually designed, how it works,
how to extended further than the basic usage and some sample recipes
and configurations for complex applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mario Corchero</dc:creator><pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-10:europython-2017/effortless-logging-let-the-loggers-work-for-you.html</guid></item><item><title>It's time for datetime. Painless working with time in python</title><link>http://pyvideo.org/fosdem-2017/its-time-for-datetime-painless-working-with-time-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Working with time is not a trivial challenge. Python includes a native module in the standard library to work with it but datetime keeps being together with unicode a common source of errors. This often leads to the widespread of many other libraries in the attempt of easing the work of working with datetime. Datetime is one of those API that looks easy to use but given the many concepts around time, is it easy to get backfired if the developer has not solid knowledge about the them.In this talk we will overview the main concepts about timestamps represented through datetime objects, the limitations on the standard library and some simple steps to try to avoid the common mistakes that everyone can fall into.Naive datetimes (which the datetime API works by default with) are a great tool to represent calendar times, but when talking about timestamps (focus of this talk) timezones is n essential part of it and the datetime module can be tricky to use for that use cases.We will also speak about different standards of time, time zones, Daylight Saving Times, leap seconds, serialization and datetime arithmetics.The talk will be focused on giving the foundations that everyone knows to be able to understand and work efficiently and without making painful mistakes when dealing with time related algorithms.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mario Corchero</dc:creator><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-02-05:fosdem-2017/its-time-for-datetime-painless-working-with-time-in-python.html</guid></item><item><title>It's time for datetime</title><link>http://pyvideo.org/pycon-us-2017/its-time-for-datetime.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Working with time is not a trivial challenge. Python includes a native
module in the standard library to work with it but datetime keeps being
together with unicode a common source of errors. This often leads to the
widespread of many other libraries in the attempt of easing the work of
working with datetime. Datetime is one of those API that looks easy to
use but given the many concepts around time, is it easy to get backfired
if the developer has not solid knowledge about the them.&lt;/p&gt;
&lt;p&gt;In this talk we will overview the main concepts about timestamps
represented through datetime objects, the limitations on the standard
library and some simple steps to try to avoid the common mistakes that
everyone can fall into.&lt;/p&gt;
&lt;p&gt;Naive datetimes (which the datetime API works by default with) are a
great tool to represent calendar times, but when talking about
timestamps (focus of this talk) timezones is n essential part of it and
the datetime module can be tricky to use for that use cases.&lt;/p&gt;
&lt;p&gt;We will also speak about different standards of time, time zones,
Daylight Saving Times, leap seconds, serialization and datetime
arithmetics.&lt;/p&gt;
&lt;p&gt;The talk will be focused on giving the foundations that everyone knows
to be able to understand and work efficiently and without making painful
mistakes when dealing with time related algorithms.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mario Corchero</dc:creator><pubDate>Sat, 20 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-20:pycon-us-2017/its-time-for-datetime.html</guid></item><item><title>Traveling in datetime</title><link>http://pyvideo.org/pycon-es-2016/traveling-in-datetime.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tras un repaso rápido sobre el modulo time y datetime veremos los diferentes problemas que surgen al trabajar con zonas horarias y operaciones sobre fechas. La presentación incluirá un pequeño repaso sobre las diferentes formas de representar fechas.&lt;/p&gt;
&lt;p&gt;Presentación disponible en &lt;a class="reference external" href="https://mariocj89.github.io/reveal.js/datetime-pycones2016.html"&gt;https://mariocj89.github.io/reveal.js/datetime-pycones2016.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://2016.es.pycon.org/"&gt;http://2016.es.pycon.org/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Mario Corchero</dc:creator><pubDate>Sat, 08 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-08:pycon-es-2016/traveling-in-datetime.html</guid></item></channel></rss>