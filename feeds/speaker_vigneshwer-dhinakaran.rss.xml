<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 13 May 2018 00:00:00 +0000</lastBuildDate><item><title>Pumping up Python modules using Rust</title><link>http://pyvideo.org/pycon-us-2018/pumping-up-python-modules-using-rust.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you’ve spent much time writing (or debugging) Python performance problems, you’ve probably had a hard time managing memory with its limited language support.&lt;/p&gt;
&lt;p&gt;In this talk, we venture deep into the belly of the Rust Language to uncover the secret incantations for building high performance and memory safe Python extensions using Rust.&lt;/p&gt;
&lt;p&gt;Rust has a lot to offer in terms of safety and performance for high-level programming languages such Python, Ruby, Js and more with its easy Foreign Function Interface capabilities which enables developers to easily develop bindings for foreign code.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">vigneshwer dhinakaran</dc:creator><pubDate>Sun, 13 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-13:pycon-us-2018/pumping-up-python-modules-using-rust.html</guid><category>rust</category></item></channel></rss>