<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Wed, 09 May 2018 00:00:00 +0000</lastBuildDate><item><title>Parallel Data Analysis with Dask</title><link>http://pyvideo.org/pycon-us-2018/parallel-data-analysis-with-dask.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The libraries that power data analysis in Python are essentially limited to a single CPU core and to datasets that fit in RAM. Attendees will see how dask can parallelize their workflows, while still writing what looks like normal python, NumPy, or pandas code.&lt;/p&gt;
&lt;p&gt;Dask is a parallel computing framework, with a focus on analytical computing. We'll start with &lt;cite&gt;dask.delayed&lt;/cite&gt;, which helps parallelize your existing Python code. We’ll demonstrate &lt;cite&gt;dask.delayed&lt;/cite&gt; on a small example, introducing the concepts at the heart of dask like the &lt;em&gt;task graph&lt;/em&gt; and the &lt;em&gt;schedulers&lt;/em&gt; that execute tasks. We’ll compare this approach to the simpler, but less flexible, parallelization methods available in the standard library like &lt;cite&gt;concurrent.futures&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;Attendees will see the high-level collections dask provides for writing regular Python, NumPy, or Pandas code that is then executed in parallel on datasets that may be larger than memory. These high level collections provide a familiar API, but the execution model is very different. We'll discuss concepts like the GIL, serialization, and other headaches that come up with parallel programming. We’ll use dask’s various schedulers to illustrate the differences between multi-threaded, multi-processes, and distributed computing.&lt;/p&gt;
&lt;p&gt;Dask includes a distributed scheduler for executing task graphs on a cluster of machines. We’ll provide each person access to their own cluster.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Augspurger</dc:creator><pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-09:pycon-us-2018/parallel-data-analysis-with-dask.html</guid><category>dask</category></item><item><title>Pandas: .head() to .tail()</title><link>http://pyvideo.org/pydata-seattle-2015/pandas-head-to-tail.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pandas is an extremely powerful library for data analysis. With that power comes complexity. This tutorial will focus on the core features of pandas, which handle most data munging tasks. The emphasis will be on practical applications, illustrating solutions to common problems using real-world data.&lt;/p&gt;
&lt;p&gt;The motivation of this tutorial mirrors that of pandas itself: practicality. A brief discussion on the problems pandas tries to solve will help frame the rest of the tutorial. We'll aim for an intuitive understanding of each new method and data structure. This will help keep us from getting overwhelmed by the options available as we expand our data munging toolkit. The start of the talk will focus on the core operations of&lt;/p&gt;
&lt;p&gt;Selecting and Indexing
Reshaping and Tidy Data
Summarization
Grouped operations
Merging and Joining
These operations can be combined into &amp;quot;pandastic&amp;quot; method chains that flow seamlessly from data IO to analysis.&lt;/p&gt;
&lt;p&gt;Time permitting we'll look at some of the more specialized areas of pandas including Categoricals, time-series analysis, Hierarchical Indexes, chunked / out of core processing, and data pipelines.&lt;/p&gt;
&lt;p&gt;Learning to use a library the size of pandas is a huge commitment. What's more, your goal is rarely achieved just with pandas. Rather, pandas gets you to the point where you can begin your interesting analysis. We'll build the foundation to quickly get you past the data munging, to the analysis.&lt;/p&gt;
&lt;p&gt;Materials:
- slides: &lt;a class="reference external" href="http://www.slideshare.net/PyData/pandas-head-to-tail-slidestom-augspurger"&gt;http://www.slideshare.net/PyData/pandas-head-to-tail-slidestom-augspurger&lt;/a&gt;
- Github repo: &lt;a class="reference external" href="https://github.com/tomaugspurger/pydataseattle"&gt;https://github.com/tomaugspurger/pydataseattle&lt;/a&gt;
- nbviewer link to notebooks: &lt;a class="reference external" href="http://nbviewer.ipython.org/github/TomAugspurger/PyDataSeattle/tree/master/notebooks/"&gt;http://nbviewer.ipython.org/github/TomAugspurger/PyDataSeattle/tree/master/notebooks/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Augspurger</dc:creator><pubDate>Fri, 24 Jul 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-07-24:pydata-seattle-2015/pandas-head-to-tail.html</guid></item><item><title>Mind the Gap! Bridging the pandas - scikit learn dtype divide</title><link>http://pyvideo.org/pydata-chicago-2016/mind-the-gap-bridging-the-pandas-scikit-learn-dtype-divide.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Github: &lt;a class="reference external" href="https://github.com/TomAugspurger/mtg/blob/master/MTG.pdf"&gt;https://github.com/TomAugspurger/mtg/blob/master/MTG.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This talk briefly introduces the two different data models used by Scikit-Learn (NumPy arrays) and pandas DataFrames. We see why this can cause problems for users of these libraries. Finally, we discuss strategies for managing the differences.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Augspurger</dc:creator><pubDate>Sat, 27 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-27:pydata-chicago-2016/mind-the-gap-bridging-the-pandas-scikit-learn-dtype-divide.html</guid><category>pandas</category><category>scikit</category></item><item><title>Pandas: .head() to .tail()</title><link>http://pyvideo.org/pydata-chicago-2016/pandas-head-to-tail.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Github: &lt;a class="reference external" href="https://github.com/TomAugspurger/pydata-chi-h2t"&gt;https://github.com/TomAugspurger/pydata-chi-h2t&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An introduction to using pandas for data analysis.  Please clone the repository and follow the setup before arriving.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tom Augspurger</dc:creator><pubDate>Fri, 26 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-26:pydata-chicago-2016/pandas-head-to-tail.html</guid></item></channel></rss>