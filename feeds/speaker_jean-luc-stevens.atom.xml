<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_jean-luc-stevens.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-08-04T00:00:00+00:00</updated><entry><title>Interactive Data Visualization with HoloViews &amp; Bokeh</title><link href="http://pyvideo.org/scipy-2017/interactive-data-visualization-with-holoviews-bokeh.html" rel="alternate"></link><published>2017-08-04T00:00:00+00:00</published><updated>2017-08-04T00:00:00+00:00</updated><author><name>Jean-Luc Stevens</name></author><id>tag:pyvideo.org,2017-08-04:scipy-2017/interactive-data-visualization-with-holoviews-bokeh.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are audio issues with this video that cannot be fixed. We recommend listening to the tutorial without headphones to minimize the buzzing sound.
Tutorial information may be found at &lt;a class="reference external" href="https://scipy2017.scipy.org/ehome/220975/493423/"&gt;https://scipy2017.scipy.org/ehome/220975/493423/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visualization represents a major bottleneck in scientific research, engineering, data science, and data analytics. The tools in the Python scientific ecosystem make it very simple to do many of the tasks required, but building visualizations to help understand complex patterns and relationships in your data still typically involves a large amount of custom coding for every new type of plot. Writing long and detailed scripts for plotting slows down the process of exploration and reporting, while the difficulty involved means that many important observations and discoveries are missed due to inadequate visualizations. The complexity of the resulting plotting code makes it difficult to rapidly build sophisticated, interactive visualizations that can quickly reveal the underlying structure of the data, and once such complex plotting scripts have been created they can be a major impediment to future understanding, reproduction, and modification of the research process.&lt;/p&gt;
&lt;p&gt;In this tutorial, you will learn how to approach the problem of interactive visualization declaratively. Using the HoloViews library, you can annotate your data and store it in general-purpose containers that will be instantly visualizable. The declarative objects in HoloViews wrap your data to make it incredibly easy to visualize how different sets of data relate to each other, using subfigures, animations, interactive widgets and custom interactions. This flexibility has made HoloViews the chosen future replacement for the high-level Bokeh Charts API and works particularly well with IPython/Jupyter notebooks, where you can immediately see the output from selecting, combining, slicing, or sampling these objects. Each of these operations generates a different type of visualization, that can be flexibly extended even to complex dashboards deployed using the Bokeh server or Jupyter dashboards.&lt;/p&gt;
&lt;p&gt;The core design principle of HoloViews is to make it simple to create complex plot layouts and interactivity by applying compositional operations to a small number of elements and containers. Since HoloViews separates the declaration of the data from the precise visual details of the plotting code, the same HoloViews objects can be rendered using matplotlib for publication-quality plots, or bokeh for interactive use. Overall, this means the user can focus on &lt;strong&gt;what&lt;/strong&gt; to plot before worrying about &lt;strong&gt;how&lt;/strong&gt; exactly it should be displayed, providing a huge boost in productivity.&lt;/p&gt;
</summary><category term="tutorial"></category><category term="HoloViews"></category><category term="Bokeh"></category></entry><entry><title>Deploying Interactive Jupyter Dashboards for Visualizing Hundreds of Millions of Datapoints, in 30 Lines of Python</title><link href="http://pyvideo.org/scipy-2017/deploying-interactive-jupyter-dashboards-for-visualizing-hundreds-of-millions-of-datapoints-in-30-lines-of-python.html" rel="alternate"></link><published>2017-07-17T00:00:00+00:00</published><updated>2017-07-17T00:00:00+00:00</updated><author><name>Philipp Rudiger</name></author><id>tag:pyvideo.org,2017-07-17:scipy-2017/deploying-interactive-jupyter-dashboards-for-visualizing-hundreds-of-millions-of-datapoints-in-30-lines-of-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It can be difficult to assemble the right set of packages from the Python scientific software ecosystem to solve complex problems. This presentation will show step by step how to make and deploy a concise, fast, and fully reproducible recipe for interactive visualization of millions or billions of datapoints using very few lines of Python in a Jupyter notebook using a combination of the HoloViews, Datashader, Dask, Bokeh and paramNB libraries and deployed as a Jupyter Dashboard.&lt;/p&gt;
</summary><category term="jupyter notebook"></category></entry><entry><title>Building Complex Visualizations Easily</title><link href="http://pyvideo.org/euroscipy-2015/building-complex-visualizations-easily.html" rel="alternate"></link><published>2015-10-05T00:00:00+00:00</published><updated>2015-10-05T00:00:00+00:00</updated><author><name>Philipp Rudiger</name></author><id>tag:pyvideo.org,2015-10-05:euroscipy-2015/building-complex-visualizations-easily.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scientific visualization typically requires large amounts of custom coding that obscures the underlying principles of the work and makes it more difficult to share and reproduce the results. Here we describe how the new HoloViews Python package, combined with the IPython Notebook, provides a rich interface for flexible and nearly code-free visualization of your results while storing a full record.&lt;/p&gt;
</summary></entry><entry><title>HoloViews Let your Data Reveal Itself</title><link href="http://pyvideo.org/scipy-2016/holoviews-let-your-data-reveal-itself-scipy-2016-phllip-rudiger-and-jean-luc-stevens-et-al.html" rel="alternate"></link><published>2016-07-14T00:00:00+00:00</published><updated>2016-07-14T00:00:00+00:00</updated><author><name>Phllip Rudiger</name></author><id>tag:pyvideo.org,2016-07-14:scipy-2016/holoviews-let-your-data-reveal-itself-scipy-2016-phllip-rudiger-and-jean-luc-stevens-et-al.html</id><summary type="html"></summary><category term="SciPy 2016"></category></entry></feed>