<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/tag_ansible.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-10-25T00:00:00+00:00</updated><entry><title>No Compromise: Use Ansible properly or stick to your scripts</title><link href="http://pyvideo.org/pycon-de-2017/no-compromise-use-ansible-properly-or-stick-to-your-scripts.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Björn Meier</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/no-compromise-use-ansible-properly-or-stick-to-your-scripts.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Bjoern Meier&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bjoern is a software engineer at Blue Yonder GmbH since 2016 after graduating in Computer Science. More correctly you could say he is a DevOps engineer at Blue Yonder where he is developing and operating - among other things - the services for the external data interfaces, preprocessing and data storage to enable the data scientists to run their prediction models. He loves the versatility and ecosystem of python to write e.g. production web apps, data analysis tools or operational scripts. If there was more free time he would like to spent it to dive deeper into functional programming languages like elixir to have a different view on things.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What you do in Ansible should be clean an simple. What we did was not. So I will show what we did wrong but also what we have changed or still have to, to make our life easier again. But I will also show how we progressively utilize Ansible to deploy our Data Science infrastructure.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ansible should help you to orchestrate your systems, automate the deployments and set up well defined infrastructures. But if you want to make something work quickly in Ansible the chances are high that you fall back to shell/command tasks, the mother of all evil. Those tasks usually prevent you from running dry runs where you would see the upcoming changes and you prevent Ansible to shine. So, we went blindly into every deployment and hoped the best. But we wanted to see what would change, we wanted to make ansible --check work again and therefore in this talk I will show you what we did wrong and what we changed to get there.&lt;/p&gt;
&lt;p&gt;More precisely, I will show what you can do to replace the nasty shell tasks with proper modules, plugins and filters, how they are developed, tested and included in your project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="infrasturcture"></category><category term="business"></category><category term="devops"></category><category term="ansible"></category></entry><entry><title>Ansible roles, private git repos and the Ansible Galaxy tool</title><link href="http://pyvideo.org/pycon-italia-2017/ansible-roles-private-git-repos-and-the-ansible-galaxy-tool.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>serena lorenzini</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/ansible-roles-private-git-repos-and-the-ansible-galaxy-tool.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ansible is a python tool that automates the management of an IT
infrastructure. It is easy to learn but rushing to use it with a limited
knowledge of its best practices leads to not reusable code.&lt;/p&gt;
&lt;p&gt;Creating reusable Ansible roles is a strongly encouraged practice, in
fact there is a tool designed just for this purpose: Ansible Galaxy. It
comes bundled with Ansible and its purpose is to download roles from the
Galaxy hub and other sources.&lt;/p&gt;
&lt;p&gt;This talk wants to show how we manage our Ansible roles and their
dependencies in a consistent way by means of Ansible Galaxy. It will
also offer an overview of how Ansible roles can be tested.&lt;/p&gt;
</summary><category term="config-ninja"></category><category term="continuous-integration"></category><category term="command-line"></category><category term="gitlab"></category><category term="ansible"></category><category term="best-practices"></category></entry><entry><title>Taking care of PostgreSQL with Ansible</title><link href="http://pyvideo.org/pycon-italia-2017/taking-care-of-postgresql-with-ansible.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Rubens Souza</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/taking-care-of-postgresql-with-ansible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Ansible&lt;/strong&gt; is a powerful automation tool written in &lt;strong&gt;Python&lt;/strong&gt;. With
its modules already built for &lt;strong&gt;PostgreSQL&lt;/strong&gt;, we can easily manage the
most advanced open source database, making sure the configuration is
exact in every detail and repeatable as many times as it is needed. In
this talk we will understand how &lt;strong&gt;Ansible&lt;/strong&gt; works, see some of its main
modules for system/cloud administration, and learn how it can be used to
orchestrate &lt;strong&gt;PostgreSQL&lt;/strong&gt; deployments, managing all parts of the
process at ease. A &lt;strong&gt;PostgreSQL&lt;/strong&gt; test environment configuration, using
&lt;strong&gt;Ansible&lt;/strong&gt; and &lt;strong&gt;Vagrant&lt;/strong&gt;, will be shown as an example.&lt;/p&gt;
</summary><category term="postgresql"></category><category term="database"></category><category term="devops"></category><category term="automation"></category><category term="ansible"></category></entry><entry><title>Deploy automatizzato di un progetto Python 3/Django con Ansible</title><link href="http://pyvideo.org/pycon-italia-2017/deploy-automatizzato-di-un-progetto-python-3django-con-ansible.html" rel="alternate"></link><published>2017-04-07T00:00:00+00:00</published><updated>2017-04-07T00:00:00+00:00</updated><author><name>Marco Santamaria</name></author><id>tag:pyvideo.org,2017-04-07:pycon-italia-2017/deploy-automatizzato-di-un-progetto-python-3django-con-ansible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;La mia applicazione è pronta e funziona senza problemi sulla mia
macchina con il server di sviluppo, ma non ho chiaro come portarla in un
ambiente di produzione. Ci sono parecchi servizi che permettono il
deploy con un solo click, adatti soprattutto a semplici siti, ma essi
non sono pienamente configurabili e nascondono il modo in cui il server
è effettivamente organizzato. Anche se molti usano ingegnose soluzioni
PaaS, vale ancora la pena capire come costruire da zero un ambiente di
produzione con Linux, Python 3, Django e uWSGI. Nel talk questo classico
stack verrà brevemente introdotto e si mostrerà poi come automatizzare
la configurazione e la procedura di deploy con un &lt;a class="reference external" href="https://github.com/marco-santamaria/django-%20ansible-deploy"&gt;playbook
Ansible&lt;/a&gt;
che verrà messo a disposizione. Una particolare enfasi verrà data
all’uso di variabili d’ambiente per la configurazione del progetto
seguendo l’approccio delle twelve-factor-app. Inoltre verranno spiegati
i concetti più importanti di Ansible (playbook, ruoli, template, moduli,
inventari).&lt;/p&gt;
</summary><category term="deploy"></category><category term="devops"></category><category term="automation"></category><category term="nginx"></category><category term="ansible"></category><category term="best-practices"></category><category term="django"></category><category term="uwsgi"></category></entry><entry><title>Ansible &amp; Terraform for Django: Move Faster, break fewer things</title><link href="http://pyvideo.org/pycon-se-2017/ansible-terraform-for-django-move-faster-break-fewer-things.html" rel="alternate"></link><published>2017-09-06T00:00:00+00:00</published><updated>2017-09-06T00:00:00+00:00</updated><author><name>Ezequiel Golub</name></author><id>tag:pyvideo.org,2017-09-06:pycon-se-2017/ansible-terraform-for-django-move-faster-break-fewer-things.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Intro level talk about using Ansible and Terraform together. These tools allow you to provision cloud resources such as Virtual Servers or CDN and to set up your servers with whatever software is needed. This allows to treat infrastructure as code, a cornerstone of DevOps.&lt;/p&gt;
</summary><category term="ansible"></category><category term="terraform"></category><category term="django"></category></entry><entry><title>Ansible</title><link href="http://pyvideo.org/pycon-es-2017/ansible.html" rel="alternate"></link><published>2017-09-23T15:00:00+02:00</published><updated>2017-09-23T15:00:00+02:00</updated><author><name>Roberto Majadas</name></author><id>tag:pyvideo.org,2017-09-23:pycon-es-2017/ansible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ansible es un sistema de gestión de la configuración del software desarrollado en python que permite automatizar la configuración e instalación de software en ordenadores. Con este sistema es posible, a traves de ssh, instalar, configurar, cambiar ficheros, reiniciar servicios. Y al estar desarrollado en python permite a los programadores extenderlo y embeberlo con relativa facilidad.&lt;/p&gt;
</summary><category term="ansible"></category></entry><entry><title>Ansible modules for oVirt</title><link href="http://pyvideo.org/pycon-israel-2017/ansible-modules-for-ovirt.html" rel="alternate"></link><published>2017-06-13T00:00:00+00:00</published><updated>2017-06-13T00:00:00+00:00</updated><author><name>Ondřej Macháček</name></author><id>tag:pyvideo.org,2017-06-13:pycon-israel-2017/ansible-modules-for-ovirt.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The oVirt project contains Python, Java and Ruby SDKs, which are auto-generated from the API specification and they are using imperative concept. On the other hand Ansible modules have to be declarative and idempotent. In this talk we will present issues we've had during the development, the lessons we've learned, and how we've made Ansible modules declarative using imperative SDK. The development of Ansible modules is done in Python, so the Python developers will gain knowledge on how Ansible modules can be developed, and what things should be considered when writing Ansible modules.&lt;/p&gt;
</summary><category term="ansible"></category><category term="ovirt"></category></entry><entry><title>Ansible 101</title><link href="http://pyvideo.org/pydx-2016/ansible-101.html" rel="alternate"></link><published>2016-12-30T00:00:00+00:00</published><updated>2016-12-30T00:00:00+00:00</updated><author><name>Josh Berkus</name></author><id>tag:pyvideo.org,2016-12-30:pydx-2016/ansible-101.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyDX 2016 talk by Josh Berkus&lt;/p&gt;
&lt;p&gt;Wanna use an automation platform written in Python? Of course you do. And I say &amp;quot;automation platform&amp;quot; rather than &amp;quot;configuration management&amp;quot; because Ansible isn't just about configuration.&lt;/p&gt;
&lt;p&gt;This all-demo, no-slide talk will teach you by example how to get started with Ansible automating all the things you need automated.&lt;/p&gt;
</summary><category term="ansible"></category></entry><entry><title>R0 DAY1-01 Openstack Swift Benchmark with Ansible - Charles Hsu (PyCon APAC 2015)</title><link href="http://pyvideo.org/pycon-apac-2015/r0-day1-01-openstack-swift-benchmark-with-ansible.html" rel="alternate"></link><published>2015-08-24T00:00:00+00:00</published><updated>2015-08-24T00:00:00+00:00</updated><author><name>Charles Hsu</name></author><id>tag:pyvideo.org,2015-08-24:pycon-apac-2015/r0-day1-01-openstack-swift-benchmark-with-ansible.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Charles Hsu&lt;/p&gt;
&lt;blockquote&gt;
Using Ansible for OpenStack Swift benchmark&lt;/blockquote&gt;
&lt;p&gt;Outline is here, may be modified in a future.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Introduct Openstack Swift&lt;ul&gt;
&lt;li&gt;What's that?&lt;/li&gt;
&lt;li&gt;Single Node Swift (SAIO Swift) (&lt;a class="reference external" href="http://docs.openstack.org/developer/swift/development_saio.html"&gt;http://docs.openstack.org/developer/swift/development_saio.html&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Swift Cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Introduce Ansible&lt;ul&gt;
&lt;li&gt;Why&lt;/li&gt;
&lt;li&gt;Other tools (Fabric/Slatstack/Chef)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What's problems and pains&lt;ul&gt;
&lt;li&gt;Configure multiple swift nodes (swift proxy/object/container servers) without extra packages&lt;/li&gt;
&lt;li&gt;Deploy/manage multiple benchmark nodes&lt;/li&gt;
&lt;li&gt;Sweep all data in Swift nodes (Dev Cluster)&lt;/li&gt;
&lt;li&gt;Run a benchmark test&lt;/li&gt;
&lt;li&gt;Collecting benchmark result from benchmark nodes and errors from swift nodes&lt;/li&gt;
&lt;li&gt;Repeat it again, again and again&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use Ansible&lt;ul&gt;
&lt;li&gt;Define a cluster and nodes&lt;/li&gt;
&lt;li&gt;Deploy benchmark nodes&lt;/li&gt;
&lt;li&gt;Collecting and aggregate result form benchmark node&lt;/li&gt;
&lt;li&gt;Repeat&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What's next?&lt;ul&gt;
&lt;li&gt;Move it to Docker?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;About the speaker:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Twitter &amp;#64;thecharz&lt;/li&gt;
&lt;li&gt;組織/公司 SwiftStack&lt;/li&gt;
&lt;li&gt;頭銜 Techical Support Enginner&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tw.pycon.org/2015apac/zh/program/12"&gt;https://tw.pycon.org/2015apac/zh/program/12&lt;/a&gt;&lt;/p&gt;
</summary><category term="ansible"></category><category term="openStack"></category><category term="swift"></category></entry><entry><title>Ansible beyond YAML</title><link href="http://pyvideo.org/pycon-us-2015/ansible-beyond-yaml.html" rel="alternate"></link><published>2015-04-11T00:00:00+00:00</published><updated>2015-04-11T00:00:00+00:00</updated><author><name>Michael Scherer</name></author><id>tag:pyvideo.org,2015-04-11:pycon-us-2015/ansible-beyond-yaml.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ansible is a configuration management tool whose primary mode of
operation involve using YAML to describe deployments and operations.
However, it can do much more and be extended using python, which is what
we will explore in this talk. Among others, we will see the plugins
system for various part of the tool and how to reuse Ansible in a
script.&lt;/p&gt;
</summary><category term="ansible"></category><category term="yaml"></category></entry></feed>