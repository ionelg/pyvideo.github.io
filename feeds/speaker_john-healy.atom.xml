<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_john-healy.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-10-07T00:00:00+00:00</updated><entry><title>How to Identify, Train and Grow Junior Developers</title><link href="http://pyvideo.org/pygotham-2017/how-to-identify-train-and-grow-junior-developers.html" rel="alternate"></link><published>2017-10-07T00:00:00+00:00</published><updated>2017-10-07T00:00:00+00:00</updated><author><name>John Healy</name></author><id>tag:pyvideo.org,2017-10-07:pygotham-2017/how-to-identify-train-and-grow-junior-developers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the biggest problems facing any growing software-based company is finding the right engineers to grow the team. Often, engineering leadership responds to this need by engaging a variety of outside resources, including recruiters or internal HR departments. Unfortunately, these resources tend to be ill-equipped to find the right talent, instead taking a one-size-fits-all approach that leads the growing company to compete over the same limited and expensive resources that big companies look for.
In this talk, you'll learn how to find the many great individuals passed over by this process, many of whom are likely better fits for your business than even the best on-paper candidate. You'll learn how to help these people become great contributors to your team, often more quickly than expected. Finally, you'll learn about some pitfalls to avoid as a company in order to get the best out of your employees.
If you're new to Python or software development, this talk is also for you! You'll learn how to get the most out of your education, whether its self study, college, or a bootcamp. You'll learn how to identify small and growing teams that are worth your time and energy. Most importantly, you'll learn that breaking in to the industry takes work, but its not as hard as you think it is!&lt;/p&gt;
</summary></entry><entry><title>Clustering: A Guide for the Perplexed</title><link href="http://pyvideo.org/pydata-dc-2016/clustering-a-guide-for-the-perplexed.html" rel="alternate"></link><published>2016-10-08T00:00:00+00:00</published><updated>2016-10-08T00:00:00+00:00</updated><author><name>Leland McInnes</name></author><id>tag:pyvideo.org,2016-10-08:pydata-dc-2016/clustering-a-guide-for-the-perplexed.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;Finding clusters is a powerful tool for understanding and exploring data. While the task sounds easy, it can be surprisingly difficult to do it well. Most standard clustering algorithms can, and do, provide very poor clustering results in many cases. We discuss how to do clustering correctly.&lt;/p&gt;
&lt;p&gt;Finding clusters is a powerful tool for understanding and exploring data. While the task sounds easy, it can be surprisingly difficult to it well. Most standard clustering algorithms can, and do, provide very poor clustering results in many cases. Our intuitions for what a cluster is are not as clear as we would like, and can easily be lead astray. We will attempt to find a definition of clustering that makes sense for most cases, and introduce an algorithm for finding such clusters, along with a high performance python implementation of the algorithm, building up more intuition for what clustering really means as we go.&lt;/p&gt;
</summary></entry></feed>