<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_david-liu.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-07-12T00:00:00+00:00</updated><entry><title>Infrastructure design patterns with Python, Buildbot, and Linux Containers</title><link href="http://pyvideo.org/europython-2017/infrastructure-design-patterns-with-python-buildbot-and-linux-containers.html" rel="alternate"></link><published>2017-07-12T00:00:00+00:00</published><updated>2017-07-12T00:00:00+00:00</updated><author><name>David Liu</name></author><id>tag:pyvideo.org,2017-07-12:europython-2017/infrastructure-design-patterns-with-python-buildbot-and-linux-containers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In today’s world of fast-paced development, infrastructure can get
left behind quickly, leading to a potential increase in technical
debt. Buildbot is normally known to be a continuous integration (CI)
framework built in Python, but can be refashioned to solve
infrastructure design patterns that arise in enterprise or production
and deployment situations. Using Python and native Buildbot
components paired with Linux Containers, patterns such as license
management, resource allocation, load balancing, and enterprise
application deployment can be architected quickly with room for
expansion as one’s needs grow.&lt;/p&gt;
&lt;p&gt;Learn how to move past the CI mindset and construct infrastructure
needs with Buildbot and popular Linux Containers such as Docker and
ClearContainers. Attendees will learn the best known methods of
configuring Buildbot in non-CI implementations, and how to utilize
the framework components for future needs.&lt;/p&gt;
</summary></entry></feed>