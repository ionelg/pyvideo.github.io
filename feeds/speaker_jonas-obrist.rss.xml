<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Tue, 11 Jul 2017 00:00:00 +0000</lastBuildDate><item><title>Why you might want to go async</title><link>http://pyvideo.org/europython-2017/why-you-might-want-to-go-async.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Asynchronous programming is becoming a hot topic in the Python
community, especially with the rise of popularity of Python 3 and the
new asyncio library in its standard library. However, it can still be
a confusing and mysterious concept. In this talk, I will explain what
async programming is, how it works and how it could benefit you. My
goal of this talk is that at the end of it, you have an idea about
what we mean when we say asynchronous programming in Python and you
know how and when to use it.&lt;/p&gt;
&lt;p&gt;In the first part of the talk, I will dive into what asynchronous
programming is and what it isn't. Explaining the difference between
IO bound code and CPU bound code.&lt;/p&gt;
&lt;p&gt;Then I will explain how this actually works in Python, explaining the
idea of an event loop, coroutines and cooperative multitasking.&lt;/p&gt;
&lt;p&gt;Finally, I will talk about why this may be beneficial, what kind of
applications can really benefit from this and provide some examples
from my experience.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonas Obrist</dc:creator><pubDate>Tue, 11 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-11:europython-2017/why-you-might-want-to-go-async.html</guid></item><item><title>Making the Django ORM Multilingual</title><link>http://pyvideo.org/djangocon-us-2011/djangocon-2011--making-the-django-orm-multilingua.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Making the Django ORM Multilingual&lt;/p&gt;
&lt;p&gt;Presented by Jonas Obrist&lt;/p&gt;
&lt;p&gt;Why does Django make it that hard to have translated database contents?
And what solutions are there to make it easier? And how can Django make
multilingual database contents less of a pain?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonas Obrist</dc:creator><pubDate>Mon, 05 Sep 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-09-05:djangocon-us-2011/djangocon-2011--making-the-django-orm-multilingua.html</guid><category>djangocon</category><category>djangocon2011</category><category>localization</category><category>multilingual</category><category>orm</category><category>translations</category></item><item><title>Lightning Talks (day 3)</title><link>http://pyvideo.org/djangocon-europe-2010/djangoconeu-lightingtalksthirdday663flv.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan Lehnardt</dc:creator><pubDate>Wed, 26 May 2010 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2010-05-26:djangocon-europe-2010/djangoconeu-lightingtalksthirdday663flv.html</guid><category>lightning talks</category></item><item><title>Purely Python Imaging with Pymaging</title><link>http://pyvideo.org/pycon-us-2013/purely-python-imaging-with-pymaging.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;A little over a year ago, frustration with the state of image processing
in Python led me to start a project called pymaging. Pymaging is a pure
Python image processing library that works on Python 2.x and 3.x. This
talk will dive into why I started this project, how I dug into the
problems, what I learned about image formats and my goals for the future
of this project.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonas Obrist</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2013-03-17:pycon-us-2013/purely-python-imaging-with-pymaging.html</guid><category>talk</category></item></channel></rss>