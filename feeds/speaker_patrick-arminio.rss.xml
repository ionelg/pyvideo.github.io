<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sat, 28 Oct 2017 15:30:00 +0100</lastBuildDate><item><title>Django and GraphQL</title><link>http://pyvideo.org/pycon-ireland-2017/django-and-graphql.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a new alternative to REST API. GraphQL. GraphQL has been created by Facebook in 2012 and since then is being used by big companies like Facebook itself, Github, Shopify and so on. In this talk I'd like to explain why we need an alternative to REST APIs and why GraphQL is that alternative. Also we will see how to use GraphQL with Django and how to use it for non trivial applications.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Arminio</dc:creator><pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-21:pycon-ireland-2017/django-and-graphql.html</guid><category>graphql</category></item><item><title>Django and GraphQL</title><link>http://pyvideo.org/pycon-uk-2017/django-and-graphql.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The web is constantly evolving, that is even more true with the frontend world. You don’t have anymore the traditional webapp, in fact you now have two apps, backend and frontend. But how do they communicate? Traditionally we have always created REST APIs, but now, there’s a new player. GraphQL!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Arminio</dc:creator><pubDate>Sat, 28 Oct 2017 15:30:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-28:pycon-uk-2017/django-and-graphql.html</guid></item><item><title>Django and the new frontend era</title><link>http://pyvideo.org/pyconweb-2017/django-and-the-new-frontend-era.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;React, Ember, Vue - these are just some of the big beasts of the frontend world. How do they fit in a Django world? Is Django still suited for how we are now developing web apps?&lt;/p&gt;
&lt;p&gt;I work as Full stack developer so I often jump from Django to frontend frameworks like React and Vue JS. I’d like to share the way we structure Django apps in order to work well with frontend frameworks.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Arminio</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-27:pyconweb-2017/django-and-the-new-frontend-era.html</guid><category>django</category></item><item><title>Lightning talks - Wednesday - part 1</title><link>http://pyvideo.org/djangocon-europe-2017/lightning-talks-wednesday-part-1.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Daniel Quinn</dc:creator><pubDate>Wed, 05 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-05:djangocon-europe-2017/lightning-talks-wednesday-part-1.html</guid><category>lightning talks</category></item><item><title>Django and Graphql</title><link>http://pyvideo.org/europython-2017/django-and-graphql.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The web is constantly evolving, that is even more true with the
frontend world. You don’t have anymore the traditional webapp, in
fact you now have two apps, backend and frontend. But how do they
communicate? Traditionally we have always created REST APIs, but now,
there’s a new player. GraphQL!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Arminio</dc:creator><pubDate>Tue, 11 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-11:europython-2017/django-and-graphql.html</guid></item></channel></rss>