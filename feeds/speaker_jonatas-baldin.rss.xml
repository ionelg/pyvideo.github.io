<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Thu, 05 Oct 2017 00:00:00 +0000</lastBuildDate><item><title>Django Channeled</title><link>http://pyvideo.org/python-sul-2017/django-channeled.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;E aquela palestrinha  malandra do 'JOJO'&lt;/p&gt;
&lt;p&gt;Twitter  - &amp;#64;jonatasbaldin&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonatas Baldin</dc:creator><pubDate>Fri, 08 Sep 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-08:python-sul-2017/django-channeled.html</guid></item><item><title>In the land of Serverless, who uses Zappa is king!</title><link>http://pyvideo.org/pycon-za-2017/in-the-land-of-serverless-who-uses-zappa-is-king.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverless is an architecture style where we don't have servers*,
dealing just with third-party services. This means infinite scaling,
less downtime and less maintenance. Of course this is not the answer
for every problem, but it can be a good choice.&lt;/p&gt;
&lt;p&gt;Together with this concept, there's Zappa, a framework that makes that
easily to deploy Python WSGI applications with AWS Lambda and AWS API
Gateway.&lt;/p&gt;
&lt;p&gt;In this talk, we're going to discuss about the concept and the tool,
deploying a web Python application with Zappa!&lt;/p&gt;
&lt;p&gt;--  Kidding: Serverless still has servers ;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jonatas Baldin</dc:creator><pubDate>Thu, 05 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-05:pycon-za-2017/in-the-land-of-serverless-who-uses-zappa-is-king.html</guid></item></channel></rss>