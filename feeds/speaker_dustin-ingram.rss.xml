<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sat, 12 May 2018 00:00:00 +0000</lastBuildDate><item><title>Inside the Cheeseshop: How Python Packaging Works</title><link>http://pyvideo.org/pycon-us-2018/inside-the-cheeseshop-how-python-packaging-works.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Questions and confusion about the Python packaging ecosystem abound. What is this &lt;cite&gt;setup.py&lt;/cite&gt; file? What's the difference between wheels and eggs? Do I use setuptools or distutils? Why should I use twine? Do I put my projects dependencies in a &lt;cite&gt;requirements.txt&lt;/cite&gt; or in &lt;cite&gt;setup.py&lt;/cite&gt;? How do I just get my module up on PyPI? Wait, what is Warehouse?&lt;/p&gt;
&lt;p&gt;This talk will identify the key tools one might encounter when trying to distribute Python software, what they are used for, why they exist, and their history (including where their weird names come from). In addition, we'll see how they all work together, what it takes to make them work, and what the future has in store for Python packaging.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-12:pycon-us-2018/inside-the-cheeseshop-how-python-packaging-works.html</guid></item><item><title>Lightning Talks</title><link>http://pyvideo.org/pytexas-2017/lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Walker Hale - Conda packages for bash scripts
Ricky Whitaker - Becoming Comfortable in Discomfort: A few life lessons from quitting my job
Moshe Zadka - Introducing NColony
Peter Graham - Safely using read replica with postgres
John Arbelaez - The pyslackers community
Caroline D Dikibo - OSS Project Awareness: Zulip
Dustin Ingram - Good Hacker; Bad Hacker&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Walker Hale</dc:creator><pubDate>Sat, 18 Nov 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-11-18:pytexas-2017/lightning-talks.html</guid><category>lightning talks</category></item><item><title>The Fastest FizzBuzz in the West</title><link>http://pyvideo.org/pytexas-2017/the-fastest-fizzbuzz-in-the-west.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, you'll learn how I built DIVSPL (Dustin Ingram's Very Special Programming Language), a tongue-in-cheek domain-specific language, which is particularly good for implementing FizzBuzz -- as quickly as possible.&lt;/p&gt;
&lt;p&gt;We'll build DIVSPL with RPLY, an implementation of David Beazley's PLY (but with a &amp;quot;cooler&amp;quot; API) and make it compatible with RPython, a restricted subset of the Python programming language. Along the way, you'll learn about lexers, parsers, and grammars, and in the end, you'll know how to build your own language.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Sat, 18 Nov 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-11-18:pytexas-2017/the-fastest-fizzbuzz-in-the-west.html</guid></item><item><title>The Fastest FizzBuzz in the West: How to Make Your Own Programming Language</title><link>http://pyvideo.org/pygotham-2017/the-fastest-fizzbuzz-in-the-west-how-to-make-your-own-programming-language.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, you'll learn how I built DIVSPL (Dustin Ingram's Very Special Programming Language), a tongue-in-cheek domain-specific language, which is particularly good for implementing FizzBuzz -- as quickly as possible.&lt;/p&gt;
&lt;p&gt;We'll build DIVSPL with RPLY, an implementation of David Beazley's PLY (but with a &amp;quot;cooler&amp;quot; API) and make it compatible with RPython, a restricted subset of the Python programming language. Along the way, you'll learn about lexers, parsers, and grammars, and in the end, you'll know how to build your own language.'&lt;/p&gt;
&lt;p&gt;This talk is for anyone who has ever wondered how computers understand programming languages, or how to create your own programming language. It will be approachable for novices who have never studied programming language design, but will offer tools and concepts that will enable experienced users to actually build their own language, if they so desire.&lt;/p&gt;
&lt;p&gt;The audience should understand that a programming language consists of a set of symbols and patterns, and that an interpreter determines whether any given set of symbols and patterns is &amp;quot;valid&amp;quot; or &amp;quot;invalid&amp;quot;. The audience will NOT need prior experience or knowledge of advanced programming language concepts.&lt;/p&gt;
&lt;p&gt;After watching the talk, the novice users in the audience should gain an understanding of how a computer understands a programming language, including programming language concepts such as tokens, lexers, parsers and grammars.  Furthermore, experienced users should be able to implement a very simple DSL of their own using the tools discussed.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-06:pygotham-2017/the-fastest-fizzbuzz-in-the-west-how-to-make-your-own-programming-language.html</guid></item><item><title>Python Tips, Tricks and Hidden Features</title><link>http://pyvideo.org/philadelphia-python-users-group/python-tips-tricks-and-hidden-features.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;dl class="docutils"&gt;
&lt;dt&gt;Python Tips, Tricks and Hidden Features&lt;/dt&gt;
&lt;dd&gt;(using type, collections, metaclasses and more)&lt;/dd&gt;
&lt;/dl&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Thu, 19 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-19:philadelphia-python-users-group/python-tips-tricks-and-hidden-features.html</guid></item><item><title>The Fastest FizzBuzz in the West: Make Your Own Language with RPLY and RPython</title><link>http://pyvideo.org/pycon-us-2017/the-fastest-fizzbuzz-in-the-west-make-your-own-language-with-rply-and-rpython.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, you'll learn how I built DIVSPL (Dustin Ingram's Very
Special Programming Language), a tongue-in-cheek domain-specific
language, which is particularly good for implementing FizzBuzz -- as
quickly as possible.&lt;/p&gt;
&lt;p&gt;We'll build DIVSPL with RPLY, an implementation of David Beazley's PLY
(but with a &amp;quot;cooler&amp;quot; API) and make it compatible with RPython, a
restricted subset of the Python programming language. Along the way,
you'll learn about lexers, parsers, and grammars, and in the end, you'll
know how to build your own language.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Sat, 20 May 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-05-20:pycon-us-2017/the-fastest-fizzbuzz-in-the-west-make-your-own-language-with-rply-and-rpython.html</guid></item><item><title>watâ€½ Mind-bending Edge Cases in Python</title><link>http://pyvideo.org/pygotham-2016/wat-mind-bending-edge-cases-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, we'll explore ten of the most paradoxical and mind-numbing &amp;quot;Python wats&amp;quot; -- unique edge cases in the language. We'll even go so far as to re-implement the stdlib functions which cause them to understand just why they actually make sense.&lt;/p&gt;
&lt;p&gt;This is a fun and entertaining talk. In the end, attendees will gain insight into functions they use every day, including &lt;cite&gt;zip&lt;/cite&gt;, &lt;cite&gt;max&lt;/cite&gt;, &lt;cite&gt;min&lt;/cite&gt;, &lt;cite&gt;any&lt;/cite&gt;,  &lt;cite&gt;all&lt;/cite&gt;,  and more. Even the simplest of tools, when combined, can produce really weird results!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Sat, 16 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-07-16:pygotham-2016/wat-mind-bending-edge-cases-in-python.html</guid></item><item><title>What Is and What Can Be: An Exploration from `type` to Metaclasses</title><link>http://pyvideo.org/pycon-us-2016/dustin-ingram-what-is-and-what-can-be-an-exploration-from-type-to-metaclasses-pycon-2016.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Dustin Ingram&lt;/p&gt;
&lt;p&gt;Most of us use &lt;cite&gt;type&lt;/cite&gt; every day, but few can say they know it well. This talk explores &lt;cite&gt;type&lt;/cite&gt; and along the way, reveals how it relates to &lt;cite&gt;object&lt;/cite&gt;, &lt;cite&gt;class&lt;/cite&gt; and more, eventually arriving at deeper understanding of metaclasses in Python.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Tue, 31 May 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-05-31:pycon-us-2016/dustin-ingram-what-is-and-what-can-be-an-exploration-from-type-to-metaclasses-pycon-2016.html</guid><category>metaclasses</category><category>metaprogramming</category><category>types</category></item></channel></rss>