<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sat, 12 May 2018 00:00:00 +0000</lastBuildDate><item><title>Demystifying the Patch Function</title><link>http://pyvideo.org/pycon-us-2018/demystifying-the-patch-function.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the most challenging and important thing fors for Python developers learn is the unittest mock library. The patch function is in particular confusing- there are many different ways to use it. Should I use a context manager? Decorator? When would I use it manually? Improperly used patch functions can make unit tests useless, all the while making them look as if they are correctly testing code. Letâ€™s learn how to wield patch with confidence!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lisa Roach</dc:creator><pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2018-05-12:pycon-us-2018/demystifying-the-patch-function.html</guid></item></channel></rss>