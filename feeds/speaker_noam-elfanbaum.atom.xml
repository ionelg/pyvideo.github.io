<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_noam-elfanbaum.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-06-13T00:00:00+00:00</updated><entry><title>Designing Pythonic APIs</title><link href="http://pyvideo.org/pycon-israel-2017/designing-pythonic-apis.html" rel="alternate"></link><published>2017-06-13T00:00:00+00:00</published><updated>2017-06-13T00:00:00+00:00</updated><author><name>Noam Elfanbaum</name></author><id>tag:pyvideo.org,2017-06-13:pycon-israel-2017/designing-pythonic-apis.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;When writing a package (library) or even a simple module, providing it with a good API, is almost as important as its functionality itself (well, at least if you want some adoption), but what makes a good API? In this talk, Iâ€™ll provide some insights on that question by surveying the APIs that helped make projects such as Requests, Flask and Celery popular, while also reviewing technical implementations.&lt;/p&gt;
</summary></entry></feed>