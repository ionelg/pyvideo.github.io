<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_nikola-dipanov.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-07-11T00:00:00+00:00</updated><entry><title>How Facebook uses Python to build (and operate) datacenters at scale</title><link href="http://pyvideo.org/europython-2017/how-facebook-uses-python-to-build-and-operate-datacenters-at-scale.html" rel="alternate"></link><published>2017-07-11T00:00:00+00:00</published><updated>2017-07-11T00:00:00+00:00</updated><author><name>Nikola ƒêipanov</name></author><id>tag:pyvideo.org,2017-07-11:europython-2017/how-facebook-uses-python-to-build-and-operate-datacenters-at-scale.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With 4 datacenters on-line and more coming fast, building and
operating datacenter buildings becomes a problem we need to solve at
scale. At Facebook, Several teams of Production Engineers write the
software that helps us do this efficiently, and we use Python... a
lot.&lt;/p&gt;
&lt;p&gt;In this talk, I will go into some detail about only some of problems
we try to solve to make sure our datacenters come online on time so
that we can make sure you can connect with all your friends on
Facebook, and keep them humming, as efficiently as possible.&lt;/p&gt;
&lt;p&gt;We'll go into some detail about the awesome Python infrastructure
(some of it open source), that we use to build this software, and
some of the engineering practices.&lt;/p&gt;
&lt;p&gt;This is a talk for you if you were wondering how to track each and
every strand of fiber cabling within a datacenter, or make sure we
find out that the cooling system isn't really doing it's thing before
actual servers catch fire from serving you live videos.&lt;/p&gt;
</summary></entry></feed>