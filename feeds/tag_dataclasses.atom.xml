<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/tag_dataclasses.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2018-05-12T00:00:00+00:00</updated><entry><title>Dataclasses: The code generator to end all code generators</title><link href="http://pyvideo.org/pycon-us-2018/dataclasses-the-code-generator-to-end-all-code-generators.html" rel="alternate"></link><published>2018-05-12T00:00:00+00:00</published><updated>2018-05-12T00:00:00+00:00</updated><author><name>Raymond Hettinger</name></author><id>tag:pyvideo.org,2018-05-12:pycon-us-2018/dataclasses-the-code-generator-to-end-all-code-generators.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The PEP 557 dataclasses module is available in starting in Python 3.7.   It will become an essential part of every Python programmer's toolkit.  This talk shows what problem the module solves, explains its key design decisions, and provides practical examples of how to put it to work.&lt;/p&gt;
&lt;p&gt;Dataclasses are shown to be the next step in a progression of data aggregation tools: tuple, dict, simple class, bunch recipe, named tuples, records, attrs, and then dataclasses. Each builds upon the one that came before, adding expressiveness at the expense of complexity.&lt;/p&gt;
&lt;p&gt;Dataclasses are unique in that they let you selectively turn-on or turn-off its various capabilities and it lets the user choose the underlying data store (either instance dictionary, instance slots, or an inherited base class).&lt;/p&gt;
&lt;p&gt;Dataclasses and typing.NamedTuple both use variable annotations which were new in Python 3.6.&lt;/p&gt;
</summary><category term="dataclasses"></category></entry></feed>