<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/tag_serverless.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-09-24T14:30:00+02:00</updated><entry><title>Building Serverless applications with Python</title><link href="http://pyvideo.org/pycon-italia-2017/building-serverless-applications-with-python.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/building-serverless-applications-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverless applications in Python sounds, strange isn’t? In this talk
I’ll explain how to build not only crop images or select data from
DynamoDB, but build real application, what kind of troubles are we
should expect, how to make decision is your task fit into serverless
architecture in Python or may be you should use, general approach. How
fast serverless applications written in Python, and more important how
to scale it.&lt;/p&gt;
</summary><category term="serverless"></category><category term="aws"></category><category term="lambda-functions"></category><category term="python3"></category></entry><entry><title>Serverless computing con Python e AWS</title><link href="http://pyvideo.org/pycon-italia-2017/serverless-computing-con-python-e-aws.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Federico Caboni</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/serverless-computing-con-python-e-aws.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il paradigma serverless è una delle innovazioni più recenti e
interessanti negli ultimi anni: l’idea di base è quella di poter
pubblicare, nel Cloud, funzioni e pezzi di codice che vengono invocati
automaticamente al verificarsi di certi eventi, con scalabilità
potenzialmente infinita e senza doversi preoccupare della gestione dello
stack tecnologico sottostante.&lt;/p&gt;
&lt;p&gt;Nel corso di questo talk vi mostrerò:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;la più breve introduzione al Cloud Computing del mondo;&lt;/li&gt;
&lt;li&gt;cosa sono i microservizi e come funzione il paradigma serverless;&lt;/li&gt;
&lt;li&gt;quali sono i casi d’uso che beneficiano di più da questo paradigma;&lt;/li&gt;
&lt;li&gt;come costruire un’applicazione serverless in Python con i componenti
di Amazon Web Services (Lambda, API Gateway, DynamoDB, S3…);&lt;/li&gt;
&lt;li&gt;come coordinare l’esecuzione del nostro codice Python (AWS Step
Functions);&lt;/li&gt;
&lt;li&gt;come rendere tutto ancora più semplice con l’uso di framework
specifici (Chalice, Serverless)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;e, se avanza tempo:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;il senso della vita.&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="serverless"></category><category term="microservices"></category><category term="CloudComputing"></category><category term="aws"></category><category term="chalice"></category><category term="Amazon"></category><category term="cloud"></category></entry><entry><title>Serverless, what is it good for?</title><link href="http://pyvideo.org/pyconweb-2017/serverless-what-is-it-good-for.html" rel="alternate"></link><published>2017-05-27T00:00:00+00:00</published><updated>2017-05-27T00:00:00+00:00</updated><author><name>J. Randall Hunt</name></author><id>tag:pyvideo.org,2017-05-27:pyconweb-2017/serverless-what-is-it-good-for.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It's 2017 and 'serverless' is all the rage. What exactly is it and how can we use it? Will it save us money? Will it allow us to scale? When should we use it? How do we use it? In this talk I'll outline the who, what, when, where, why and how of serverless and when to use it to save money and time.&lt;/p&gt;
</summary><category term="serverless"></category></entry><entry><title>Serverless with Python</title><link href="http://pyvideo.org/pycon-es-2017/serverless-with-python.html" rel="alternate"></link><published>2017-09-24T14:30:00+02:00</published><updated>2017-09-24T14:30:00+02:00</updated><author><name>Alejandro Guirao</name></author><id>tag:pyvideo.org,2017-09-24:pycon-es-2017/serverless-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Serverless&lt;/em&gt; es una innovadora manera de desarrollar aplicaciones que consiste en funciones que son invocadas puntualmente. A partir de ahora, olvídate de administrar servidores. Tan sólo concéntrate en tu código. En esta charla explicaré cómo comenzar a desarrollar aplicaciones &lt;em&gt;serverless&lt;/em&gt; con Python en la plataforma más popular para ello (&lt;a class="reference external" href="https://aws.amazon.com/es/lambda/"&gt;AWS - Lambda&lt;/a&gt;) así como en una alternativa open source (&lt;a class="reference external" href="https://github.com/iron-io/functions"&gt;IronFunctions&lt;/a&gt;).&lt;/p&gt;
</summary><category term="serverless"></category></entry><entry><title>Building Serverless applications with Python</title><link href="http://pyvideo.org/pycon-israel-2017/building-serverless-applications-with-python.html" rel="alternate"></link><published>2017-06-12T00:00:00+00:00</published><updated>2017-06-12T00:00:00+00:00</updated><author><name>Andrii Soldatenko</name></author><id>tag:pyvideo.org,2017-06-12:pycon-israel-2017/building-serverless-applications-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverless applications in Python sounds, strange isn’t? In this talk I’ll explain how to build not only crop images or select data from DynamoDB, but build real application, what kind of troubles are we should expect, how to make decision is your task fit into serverless architecture in Python or may be you should use, general approach. How fast serverless applications written in Python, and more important how to scale it.&lt;/p&gt;
</summary><category term="serverless"></category></entry><entry><title>DIY Serverless Platform with Python3 and Docker</title><link href="http://pyvideo.org/pycon-jamaica-2016/diy-serverless-platform-with-python3-and-docker.html" rel="alternate"></link><published>2016-11-18T00:00:00+00:00</published><updated>2016-11-18T00:00:00+00:00</updated><author><name>Joir-dan Gumbs</name></author><id>tag:pyvideo.org,2016-11-18:pycon-jamaica-2016/diy-serverless-platform-with-python3-and-docker.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A walkthrough on how I built my own serverless platform to run both ephemeral and long-lasting functions in Python on top of Docker, capable of handling REST and websocket connections. Will go over architecture, show code, and discuss pain points as well as next steps.  #pyconjamaica2016&lt;/p&gt;
</summary><category term="Serverless"></category><category term="Docker"></category></entry><entry><title>Building Serverless Machine Learning Models in the Cloud</title><link href="http://pyvideo.org/pydata-dc-2016/building-serverless-machine-learning-models-in-the-cloud.html" rel="alternate"></link><published>2016-10-08T00:00:00+00:00</published><updated>2016-10-08T00:00:00+00:00</updated><author><name>Alex Casalboni</name></author><id>tag:pyvideo.org,2016-10-08:pydata-dc-2016/building-serverless-machine-learning-models-in-the-cloud.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;You’ll learn how to efficiently design and train machine learning models in Python and deploy them to the cloud. This process reduces the development &amp;amp; operational efforts required to make your prototypes production-ready.&lt;/p&gt;
&lt;p&gt;We will describe the main challenges faced by data scientists involved in deploying machine learning models into real production environments with specific references, examples of Python libraries, and multi-model systems requiring advanced features such as A/B testing and high scalability &amp;amp; availability.&lt;/p&gt;
&lt;p&gt;While discussing the advantages and limitations of multiple deployment strategies in the cloud, we will focus on serverless computing (i.e. AWS Lambda) as a solution for simplifying your development &amp;amp; deployment workflows.&lt;/p&gt;
</summary><category term="Cloud"></category><category term="learning"></category><category term="machine learning"></category><category term="models"></category><category term="serverless"></category></entry><entry><title>Calling to the future</title><link href="http://pyvideo.org/pyday-galicia-2016/calling-to-the-future.html" rel="alternate"></link><published>2016-09-17T00:00:00+00:00</published><updated>2016-09-17T00:00:00+00:00</updated><author><name>Eloy Coto Pereiro</name></author><id>tag:pyvideo.org,2016-09-17:pyday-galicia-2016/calling-to-the-future.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;O futuro do desenvolvemento dende o meu punto de vista. Porqué ó enfoque &lt;em&gt;serverless&lt;/em&gt; e &lt;em&gt;AWS Lambda&lt;/em&gt; é tan útil e os nosos casos de uso.&lt;/p&gt;
</summary><category term="pyday"></category><category term="aws lambda"></category><category term="serverless"></category></entry></feed>