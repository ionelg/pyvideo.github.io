<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 09 Apr 2017 00:00:00 +0000</lastBuildDate><item><title>Pilotare un braccio robotico dal cloud con GenroPy e Raspberry</title><link>http://pyvideo.org/pycon-italia-2017/pilotare-un-braccio-robotico-dal-cloud-con-genropy-e-raspberry.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Spesso con gli applicativi in cloud si pone il problema di pilotare
periferiche presenti nella rete locale o collegate direttamente al
computer come registratori di cassa, stampanti industriali o altri
dispositivi. Per superare questa difficoltà abbiamo sviluppato un client
in Python sfruttando il framework GenroPy e installandolo sul proprio
computer o su una scheda RaspberryPi possiamo pilotare le periferiche
dal software in cloud. Il software è scritto interamente in Python ed è
studiato per usare un sistema a plugin grazie al quale basta scrivere un
solo modulo Python per aggiungere le funzionalità specifiche di una
singola periferica. Nel talk mostreremo come pilotare un piccolo braccio
robotico direttamente dal web sfruttando i WebSocket per la
comunicazione con il server, le Bag di GenroPy per la messaggistica e
qualche componente elettronico per il collegamento fisico con il
braccio.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michele Bertoldi</dc:creator><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-09:pycon-italia-2017/pilotare-un-braccio-robotico-dal-cloud-con-genropy-e-raspberry.html</guid><category>raspberrypi</category><category>genropy</category><category>robotics</category></item><item><title>Continuous Delivery for Iot with Python and Iottly</title><link>http://pyvideo.org/pycon-italia-2017/continuous-delivery-for-iot-with-python-and-iottly.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We know, continuous delivery is one of the current buzzwords (much like
IoT was a couple of years ago). But think of an industrial IoT project
connecting thousands of remote and inaccessible devices which should be
kept secure and updated over time. Now, imagine you can just write
Python code for your devices, test it over-the-internet both locally in
the lab, and in a real test environment simply by pushing your code to
specific branches and finally just pushing to master to update the
entire fleet.&lt;/p&gt;
&lt;p&gt;During the talk we will use Iottly to showcase this continuous delivery
pattern for the internet of things, with live code and connected devices
(Raspberry Pi).&lt;/p&gt;
&lt;p&gt;Iottly is a Development and Management Cloud Service for IoT Projects,
built by TomorrowData. Iottly is written in Python and is open source
(github). It features a Python sandbox for the devices, an online editor
to program the devices over-the-internet, and the integration with git
as the base for continuous delivery.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stefano Terna</dc:creator><pubDate>Fri, 07 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-07:pycon-italia-2017/continuous-delivery-for-iot-with-python-and-iottly.html</guid><category>raspberrypi</category><category>git</category><category>continuous-delivery</category><category>iot</category><category>over-the-air firmware upgrade</category><category>InternetOfThings</category><category>InternetDelleCose</category><category>github</category><category>IDE</category></item></channel></rss>