<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_phoenix-zerin.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-12-02T14:20:00+13:00</updated><entry><title>Demystefying Setuptools Entry Points</title><link href="http://pyvideo.org/kiwi-pycon-2017/demystefying-setuptools-entry-points.html" rel="alternate"></link><published>2017-12-02T14:20:00+13:00</published><updated>2017-12-02T14:20:00+13:00</updated><author><name>Phoenix Zerin</name></author><id>tag:pyvideo.org,2017-12-02:kiwi-pycon-2017/demystefying-setuptools-entry-points.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Entry points are one of the most powerful, yet mysterious, ways to customise the behaviour of Python projects. With just a few lines of code in your &lt;cite&gt;setup.py&lt;/cite&gt; file, you can install command-line applications, inject features into other libraries, create plugins, and more! During this session, we will explore what entry points are, how they work, and how to use them in your Python projects.&lt;/p&gt;
</summary></entry></feed>