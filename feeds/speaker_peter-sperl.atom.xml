<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/speaker_peter-sperl.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2017-10-06T00:00:00+00:00</updated><entry><title>High Performance Microservices</title><link href="http://pyvideo.org/pygotham-2017/high-performance-microservices.html" rel="alternate"></link><published>2017-10-06T00:00:00+00:00</published><updated>2017-10-06T00:00:00+00:00</updated><author><name>Peter Sperl</name></author><id>tag:pyvideo.org,2017-10-06:pygotham-2017/high-performance-microservices.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Architecture plays an important role in determining the ultimate performance of a system.  Caching effectiveness, for example, is largely determined by interface design and data storage policy, while IPC overhead is strongly influenced by service deployment strategy and the method of data exchange.&lt;/p&gt;
&lt;p&gt;The techniques and designs presented are general and not specific to any one service framework.   While many of the topics discussed apply to services and systems implemented in any language, the presented performance comparisons were run in Python and there are tips and tricks that are Python specific, such as taking liberties with the garbage collector.&lt;/p&gt;
</summary></entry></feed>