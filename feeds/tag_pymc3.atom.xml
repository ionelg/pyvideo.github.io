<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/tag_pymc3.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2018-05-13T00:00:00+00:00</updated><entry><title>Bayesian Non-parametric Models for Data Science using PyMC3</title><link href="http://pyvideo.org/pycon-us-2018/bayesian-non-parametric-models-for-data-science-using-pymc3.html" rel="alternate"></link><published>2018-05-13T00:00:00+00:00</published><updated>2018-05-13T00:00:00+00:00</updated><author><name>Christopher Fonnesbeck</name></author><id>tag:pyvideo.org,2018-05-13:pycon-us-2018/bayesian-non-parametric-models-for-data-science-using-pymc3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nowadays, there are many ways of building data science models using Python, including statistical and machine learning methods. I will introduce probabilistic models, which use Bayesian statistical methods to quantify all aspects of uncertainty relevant to your problem, and provide inferences in simple, interpretable terms using probabilities.  A particularly flexible form of probabilistic models uses Bayesian &lt;em&gt;non-parametric&lt;/em&gt; methods, which allow models to vary in complexity depending on how much data are available. In doing so, they avoid the over-fitting that is common in machine learning and statistical modeling. I will demonstrate the basics of Bayesian non-parametric modeling in Python, using the PyMC3 package. Specifically, I will introduce two common types, Gaussian processes and Dirichlet processes, and show how they can be applied easily to real-world problems using two examples.&lt;/p&gt;
</summary><category term="bayes"></category><category term="datascience"></category><category term="pymc3"></category></entry><entry><title>Fighting Gerrymandering with PyMC3</title><link href="http://pyvideo.org/pycon-us-2018/fighting-gerrymandering-with-pymc3.html" rel="alternate"></link><published>2018-05-12T00:00:00+00:00</published><updated>2018-05-12T00:00:00+00:00</updated><author><name>Colin Carroll</name></author><id>tag:pyvideo.org,2018-05-12:pycon-us-2018/fighting-gerrymandering-with-pymc3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the end of 2017, there were seven states with ongoing redistricting litigation.  We will discuss a statistical model that the United States Supreme Court declared to be appropriate in cases of racial gerrymandering, and show how it can be implemented and used with the library &lt;cite&gt;PyMC3&lt;/cite&gt;.  We will also discuss what the model tells us about racial gerrymandering in North Carolina.&lt;/p&gt;
</summary><category term="pymc3"></category></entry><entry><title>Bayesian Inference in Python</title><link href="http://pyvideo.org/pycon-se-2017/bayesian-inference-in-python.html" rel="alternate"></link><published>2017-09-06T00:00:00+00:00</published><updated>2017-09-06T00:00:00+00:00</updated><author><name>Nuo Xu</name></author><id>tag:pyvideo.org,2017-09-06:pycon-se-2017/bayesian-inference-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;With recent improvements in sampling algorithms, now is a great time to learn Bayesian statistics. I will start with an introduction to Bayesian statistics and continue by taking a look at two popular packages for doing Bayesian inference in Python, PyMC3 and PyStan.&lt;/p&gt;
</summary><category term="pymc3"></category><category term="pystan"></category></entry></feed>