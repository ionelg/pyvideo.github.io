<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="http://pyvideo.org/" rel="alternate"></link><link href="http://pyvideo.org/feeds/tag_elasticsearch.atom.xml" rel="self"></link><id>http://pyvideo.org/</id><updated>2018-05-09T00:00:00+00:00</updated><entry><title>Build a Search Engine with Python + Elasticsearch</title><link href="http://pyvideo.org/pycon-us-2018/build-a-search-engine-with-python-elasticsearch.html" rel="alternate"></link><published>2018-05-09T00:00:00+00:00</published><updated>2018-05-09T00:00:00+00:00</updated><author><name>Julie Qiu</name></author><id>tag:pyvideo.org,2018-05-09:pycon-us-2018/build-a-search-engine-with-python-elasticsearch.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the most common actions that we take when visiting any website is search. A common service that powers search for many sites is Elasticsearch -  but what makes it so powerful? What can you do with Elasticsearch that you can’t with a regular database?&lt;/p&gt;
&lt;p&gt;This tutorial starts with an introduction to Elasticsearch architecture, including what makes it great for search and not so great for other use cases. We will then build an application together with a search engine powered by Elasticsearch. We will also discuss how to optimize search queries and scale as the volume of data increases.&lt;/p&gt;
</summary><category term="elasticsearch"></category></entry><entry><title>Indicizzare e cercare tonnellate di dati con ElasticSearch e Django</title><link href="http://pyvideo.org/pycon-italia-2017/indicizzare-e-cercare-tonnellate-di-dati-con-elasticsearch-e-django.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Ernesto Arbitrio</name></author><id>tag:pyvideo.org,2017-04-09:pycon-italia-2017/indicizzare-e-cercare-tonnellate-di-dati-con-elasticsearch-e-django.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Cercare in maniera efficente e veloce in grandi quantità di dati risulta
essere, almeno nel mio campo e nelle mie esperienze, un problema
abbastanza diffuso. In questo talk sarà affrontato da un punto di vista
tecnico/sistemistico la parte di indicizzazione di grandi volumi di
dati, le accortenze da avere quando si indicizzano dati in un engine di
search e anlaytics e la parte di monitoring del cluster ELK. Nella
seconda parte invece verrà mostrata l’interazione di una web interface
(Django based) con elasticsearch. Conoscenze necessarie per il talk:
concetti base di serializzazione, restful web services, django&lt;/p&gt;
</summary><category term="elasticsearch"></category><category term="json"></category><category term="Full Text Search"></category><category term="REST"></category><category term="django"></category></entry><entry><title>Geospatial three amigos: Python, Leaflet, and ElasticSearch</title><link href="http://pyvideo.org/pycon-italia-2017/geospatial-three-amigos-python-leaflet-and-elasticsearch.html" rel="alternate"></link><published>2017-04-07T00:00:00+00:00</published><updated>2017-04-07T00:00:00+00:00</updated><author><name>Roberto Rosario</name></author><id>tag:pyvideo.org,2017-04-07:pycon-italia-2017/geospatial-three-amigos-python-leaflet-and-elasticsearch.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;One of the many jobs we do at our company is custom spatial solutions.
Over time we’ve narrowed down the stack of products that are best suited
for their jobs. Crime maps, construction zone mapping, public routes,
and real state, we’ve done it all using these three components and this
talk shows you how can do it too.&lt;/p&gt;
</summary><category term="OpenStreetMap"></category><category term="maps"></category><category term="geospatial"></category><category term="elasticsearch"></category><category term="javascript"></category></entry><entry><title>ElasticSearch and Redis How and When to Use Them</title><link href="http://pyvideo.org/pydata-dc-2016/elasticsearch-and-redis-how-and-when-to-use-them.html" rel="alternate"></link><published>2016-10-09T00:00:00+00:00</published><updated>2016-10-09T00:00:00+00:00</updated><author><name>Tim Marcinowski</name></author><id>tag:pyvideo.org,2016-10-09:pydata-dc-2016/elasticsearch-and-redis-how-and-when-to-use-them.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;When working with data, you have some viable options for keeping them in short and long-term storage. I will be going over why ElasticSearch and Redis are great for data storage. This talk will explain the purpose of each datastore when visualizing on Kibana or websockets.&lt;/p&gt;
</summary><category term="elasticsearch"></category><category term="redis"></category></entry><entry><title>Implantación de ElasticSearch: problemas y soluciones</title><link href="http://pyvideo.org/pycon-es-2015/implantacion-de-elasticsearch-problemas-y-soluciones.html" rel="alternate"></link><published>2016-02-02T00:00:00+00:00</published><updated>2016-02-02T00:00:00+00:00</updated><author><name>M. Sánchez</name></author><id>tag:pyvideo.org,2016-02-02:pycon-es-2015/implantacion-de-elasticsearch-problemas-y-soluciones.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla se presentará de manera resumida un caso real: el proceso de implantación de ElasticSearch en una aplicación de Django. Partiendo de la motivación de implementar un buscador, veremos los problemas encontrados por nuestro equipo (¡y sus soluciones!). A saber: instalación, definición de los documentos, modo de conexión, indexado, particionado y sincronía con nuestra base de datos.&lt;/p&gt;
</summary><category term="Track Básico"></category><category term="elasticsearch"></category><category term="django"></category></entry><entry><title>Komponenten einer komplexen Web-Applikation</title><link href="http://pyvideo.org/pycon-de-2013/komponenten-einer-komplexen-web-applikation.html" rel="alternate"></link><published>2013-10-16T00:00:00+00:00</published><updated>2013-10-16T00:00:00+00:00</updated><author><name>Daniel Hepper</name></author><id>tag:pyvideo.org,2013-10-16:pycon-de-2013/komponenten-einer-komplexen-web-applikation.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Komplexe Web-Applikationen bestehen aus mehr als einem Webserver, einer
Datenbank und etwas Code. Dieser Vortrag gibt einen Überblick über die
typischen Bausteine wie Celery als Task Queue, Haystack für
Volltextsuche, Sentry als Log-Diensten und automatischem Deployment mit
Fabric und Salt. Die vorgestellte Komponenten werden anhand einer
Django-Applikation erläutert, sind jedoch zum Großteil auch mit anderen
Frameworks nutzbar.&lt;/p&gt;
</summary><category term="celery"></category><category term="deployment"></category><category term="django"></category><category term="elasticsearch"></category><category term="fabric"></category><category term="haystack"></category><category term="salt"></category><category term="search"></category><category term="sentry"></category><category term="solr"></category></entry></feed>