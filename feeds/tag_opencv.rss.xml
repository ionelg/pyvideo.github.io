<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 24 Sep 2017 14:00:00 +0200</lastBuildDate><item><title>Facial Analysis Techniques for Pythonista (and beyond!)</title><link>http://pyvideo.org/pycon-italia-2017/facial-analysis-techniques-for-pythonista-and-beyond.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The ability to detect, track, and analyze faces opens up a wide range of
interesting use cases, ranging from interactive smart applications and
real- time video processing, all the way to biometric security and
augmented reality.&lt;/p&gt;
&lt;p&gt;This talk will showcase the available &lt;strong&gt;tools built by the Python
community&lt;/strong&gt; and their corresponding pros &amp;amp; cons, limitations, and
complexity. While discussing the possible scenarios and what is actually
required to &lt;strong&gt;DIY with Python&lt;/strong&gt;, I will compare such handmade solutions
with &lt;strong&gt;Cloud-based products and APIs&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;: basic understanding of Python’s data science stack
(especially numpy).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alex Casalboni</dc:creator><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-09:pycon-italia-2017/facial-analysis-techniques-for-pythonista-and-beyond.html</guid><category>CloudComputing</category><category>aws</category><category>scikit-learn</category><category>scikit-image</category><category>google-cloud</category><category>Deep-Learning</category><category>opencv</category><category>scikits</category><category>cv</category><category>Machine Learning</category><category>Facial-Analysis</category><category>dlib</category><category>Artificial Intelligence</category></item><item><title>OpenCV el ojo de la serpiente que todo lo ve</title><link>http://pyvideo.org/pycon-es-2017/opencv-el-ojo-de-la-serpiente-que-todo-lo-ve.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;En esta charla vamos a ver las nociones básicas de OpenCV, conectaremos una webcam y veremos como en tiempo real se puede obtener información del entorno que nos rodea.
Se explicará un poco de código sencillo con resultados sorprendentes y se mostrarán algunos ejemplos mas elaborados.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juan Francisco Huete Verdejo</dc:creator><pubDate>Sun, 24 Sep 2017 14:00:00 +0200</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-24:pycon-es-2017/opencv-el-ojo-de-la-serpiente-que-todo-lo-ve.html</guid><category>opencv</category></item><item><title>Corrigiendo 1000 exámenes con un pelín de OpenCV</title><link>http://pyvideo.org/pycon-es-2017/corrigiendo-1000-examenes-con-un-pelin-de-opencv.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;El objetivo de la charla es hacer una pequeña demostración del uso de algunas de las bibliotecas más icónicas, hiladas a través del objetivo final de analizar fácilmente un examen tipo test.&lt;/p&gt;
&lt;p&gt;Numpy y Matplotlib son dos de las bibliotecas más importantes en el Python científico, usadas para trabajar con arrays y representaciones gráficas respectivamente.&lt;/p&gt;
&lt;p&gt;Como una imagen en escala de grises en el fondo no es más que una matriz, usaremos unas pocas manipulaciones básicas con imágenes para mostrar cómo trabajar con funciones de Numpy, hacer slicings, etc.&lt;/p&gt;
&lt;p&gt;La interfaz de Matplotlib más sencilla, Pyplot, es muy útil para realizar muchos gráficos sin hacer un gran esfuerzo. Podemos mostrar un ejemplo sencillo de estas capacidades representando los contornos que detectemos sobre la imagen original.&lt;/p&gt;
&lt;p&gt;También se presentarán algunas de las funciones más básicas de OpenCV, uno de los paquetes de software más importantes de visión artificial. Usaremos las funciones de desenfoque, umbral y detección de contornos.&lt;/p&gt;
&lt;p&gt;Si el tiempo fuera suficiente, echaremos también un vistazo a la librería openpyxl, que nos permitirá importar y exportar datos de tablas de Excel.&lt;/p&gt;
&lt;p&gt;Puede ser importante resaltar explícitamente que debido a las limitaciones de tiempo, las librerías no pueden ser mostradas en profundidad, y que probablemente no habrá nada o casi nada de live coding. Sin embargo, todo el código usado, incluso para las imágenes intermedias, será publicado en forma de Notebook de Jupyter a través de Github.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Siro Moreno</dc:creator><pubDate>Sat, 23 Sep 2017 16:30:00 +0200</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-09-23:pycon-es-2017/corrigiendo-1000-examenes-con-un-pelin-de-opencv.html</guid><category>opencv</category></item><item><title>OpenCV con Python</title><link>http://pyvideo.org/pyday-galicia-2017/opencv-con-python.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ricardo Samaniego</dc:creator><pubDate>Sat, 10 Jun 2017 10:05:00 +0200</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-06-10:pyday-galicia-2017/opencv-con-python.html</guid><category>pyday</category><category>Galicia</category><category>opencv</category></item><item><title>How to Build Your Own Self Driving Toy Car</title><link>http://pyvideo.org/pydata-dc-2016/how-to-build-your-own-self-driving-toy-car.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData DC 2016&lt;/p&gt;
&lt;p&gt;I’ve spent the past 6 months building a self-driving toy car using a Raspberry Pi, OpenCV, and TensorFlow. If you’ve ever thought about building your own self-driving toy car, this presentation will help you avoid common pitfalls and shed light on important tradeoffs that you’ll have to weigh along the way. I’ll cover things like how to parse images, how to effectively tune machine learning neural&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan Zotti</dc:creator><pubDate>Fri, 07 Oct 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-10-07:pydata-dc-2016/how-to-build-your-own-self-driving-toy-car.html</guid><category>opencv</category><category>tensorflow</category></item><item><title>Building a live face recognition system in the blink of a very slow eye</title><link>http://pyvideo.org/pydata-amsterdam-2016/building-a-live-face-recognition-system-in-the-blink-of-a-very-slow-eye.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Amsterdam 2016&lt;/p&gt;
&lt;p&gt;Description&lt;/p&gt;
&lt;p&gt;In this tutorial we will create a face recognition application from scratch, it will provide you hands-on experience on the basics of Face Recognition. We will use the OpenCV library which makes the tutorial accessible to beginners. Together, we'll go from building our face dataset to recognizing faces in a live video. If time permits we will use this face recognition system to classify banking da&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Building a live face recognition system in the blink of a very slow eye&lt;/p&gt;
&lt;p&gt;In this hands-on tutorial we will build a live face recognition system from scratch with the use of the OpenCV methods. Since face recognition is the main goal of this tutorial we will form teams of 2-3 people and recognize the faces in a live feed. We will make use of the OpenCV computer vision and machine learning library. OpenCV includes a comprehensive set of both classic and state-of-the-art computer vision and machine learning algorithms&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rodrigo Agundez</dc:creator><pubDate>Sat, 26 Mar 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-03-26:pydata-amsterdam-2016/building-a-live-face-recognition-system-in-the-blink-of-a-very-slow-eye.html</guid><category>tutorial</category><category>opencv</category></item><item><title>Using OpenCV with Python and ROS</title><link>http://pyvideo.org/chipy/using-opencv-with-python-and-ros.html</link><description>&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Bill Mania and Eric Kinzle A brief presentation of using the OpenCV
computer vision toolset with Python and ROS. Included at the end will be
a demonstration of tracking a colored object using a camera with
servo-driven pan and tilt capability.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Bill Mania</dc:creator><pubDate>Thu, 09 Jun 2011 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2011-06-09:chipy/using-opencv-with-python-and-ros.html</guid><category>billmania</category><category>camera</category><category>chipy</category><category>image</category><category>opencv</category><category>robot</category><category>ros</category></item></channel></rss>