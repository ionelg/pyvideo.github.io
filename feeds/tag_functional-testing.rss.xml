<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 09 Apr 2017 00:00:00 +0000</lastBuildDate><item><title>Roboto Framework for Test Code Coverage for cloud services.</title><link>http://pyvideo.org/pycon-italia-2017/roboto-framework-for-test-code-coverage-for-cloud-services.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Test case design is an important phase of software testing life cycle
where test cases are identified. Designing test cases for cloud
solutions requires a different approach from traditional application
oriented testing. The quality which is multidimensional will include
more attributes like network resiliency, fault recovery, reliability and
availability when it comes to cloud-based solutions. If such aspects
when not encompassed through test development framework, it will lead to
high chances of defect leakage in production in an agile mode of
delivery. We propose a strategy to design the test cases which traverse
across different levels of testing to find gaps using the Roboto
framework with Python. The solution provides the teams and the product
owners to get a picture of what is getting tested and how much of
coverage is done. The data can be used in team release discussions to
build confidence in the tests that gets executed as part of that
release. &lt;a class="reference external" href="https://github.com/robotframework/robotframework"&gt;https://github.com/robotframework/robotframework&lt;/a&gt; Testing
performed for features in a product is diverse and can be widely
categorized into functional, non-functional like reliability, fault
injections etc. Though developing test cases for functional changes is
achievable, arriving at test cases for non-functional requirements is
challenging in the given two-week sprint cycle of agile, and so leads to
defect leakage. Some vital modules in a project would have been running
in production for years and would have different sets of teams working
at different periods. Quantifying test code coverage and quality only by
a number of test cases per feature does not suffice as testing is
multidimensional and has to span across different levels. Measuring and
improving the test code coverage is the challenge generally faced by
product teams.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">khushbu parakh</dc:creator><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-04-09:pycon-italia-2017/roboto-framework-for-test-code-coverage-for-cloud-services.html</guid><category>quality-assurance</category><category>Functional Testing</category><category>Python</category><category>testing</category><category>robustness</category><category>integration</category><category>automation</category><category>framework</category><category>deployment</category><category>google-cloud</category></item></channel></rss>